{"version":3,"sources":["../../../src/operators/beGreaterThanOperator.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;4BAEgB,gBAAgB;;IAEhC,qBAAqB;WAArB,qBAAqB;;UAArB,qBAAqB;wBAArB,qBAAqB;;6BAArB,qBAAqB;;;cAArB,qBAAqB;;SAC7B,cAAC,KAAK,EAAE;AACX,8BAAa,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;AAC3D,8BAAa,eAAe,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;;AAE9C,8BAAa,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;AACxD,8BAAa,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;;AAE3C,UAAO,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;GAC3B;;;QATW,qBAAqB","file":"beGreaterThanOperator.js","sourcesContent":["'use strict';\n\nimport { BaseOperator } from './baseOperator'\n\nexport class BeGreaterThanOperator extends BaseOperator {\n\ttest(value) {\n\t\tBaseOperator._checkForNumber(this._value, \"beGreaterThan\");\n\t\tBaseOperator._checkForNumber(value, \"expect\");\n\n\t\tBaseOperator._checkForNaN(this._value, \"beGreaterThan\");\n\t\tBaseOperator._checkForNaN(value, \"expect\");\n\n\t\treturn value > this._value;\n\t}\n}\n"]}