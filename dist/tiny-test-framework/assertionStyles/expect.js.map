{"version":3,"sources":["../../../src/assertionStyles/expect.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;qCAEgB,2BAA2B;;IAE3C,MAAM;;;;;;AAKN,UALA,MAAM,CAKL,KAAK,EAAE;wBALR,MAAM;;;;;;;AAWjB,MAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;;;;;AAOpB,MAAI,CAAC,SAAS,GAAG,KAAK,CAAC;EACvB;;;;;;;cAnBW,MAAM;;;;;;;;;;;SAsCf,YAAC,QAAQ,EAAE;AACb,OAAI,QAAQ,+CAAwB,EAAE;AACrC,QAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1C,WAAO,IAAI,CAAC,SAAS,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;IACzC;;AAED,SAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAA;GACpF;;;OApBO,eAAG;AACV,OAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;AACjC,UAAO,IAAI,CAAC;GACZ;;;QA5BW,MAAM","file":"expect.js","sourcesContent":["'use strict';\n\nimport { BaseOperator } from '../operators/baseOperator'\n\nexport class Expect {\n\n\t/**\n\t * @param {*} value value to test\n\t */\n\tconstructor (value) {\n\t\t/**\n\t\t * Base value\n\t\t * @type {*}\n\t\t * @private\n\t\t */\n\t\tthis._value = value;\n\n\t\t/**\n\t\t * Is Expression Negated\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._isNegate = false;\n\t}\n\n\t/**\n\t * Negates the expression\n\t * @returns {Expect}\n\t */\n\tget not () {\n\t\tthis._isNegate = !this._isNegate;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Expects instance of BaseOperator Child (instance of EqOperator/BeGreaterThanOperator)\n\t * use functions eq(value)/beGreaterThan(value)\n\t * @see {@link eq}\n\t * @see {@link beGreaterThan}\n\t * @param {BaseOperator} operator\n\t * @returns {boolean}\n\t */\n\tto (operator) {\n\t\tif (operator instanceof BaseOperator) {\n\t\t\tconst result = operator.test(this._value);\n\t\t\treturn this._isNegate ? !result : result;\n\t\t}\n\n\t\tthrow new Error(\"Expect#to: method argument expected to be a child of BaseOperator\")\n\t}\n}\n"]}