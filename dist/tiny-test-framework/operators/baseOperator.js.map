{"version":3,"sources":["../../../src/operators/baseOperator.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;IAKA,YAAY;cAAZ,YAAY;;SAEF,yBAAC,KAAK,EAAE,UAAU,EAAE;AACzC,OAAG,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC7B,UAAM,IAAI,KAAK,CAAI,UAAU,sCAAiC,OAAO,KAAK,eAAY,CAAC;IACvF;GACD;;;SAEkB,sBAAC,KAAK,EAAE,UAAU,EAAE;AACtC,OAAG,KAAK,CAAC,KAAK,CAAC,EAAE;AAChB,UAAM,IAAI,KAAK,CAAI,UAAU,gDAA6C,CAAC;IAC3E;GACD;;;AAEU,UAdC,YAAY,CAcZ,KAAK,EAAE;wBAdP,YAAY;;AAevB,MAAI,CAAC,MAAM,GAAG,KAAK,CAAC;EACpB;;;;;;;cAhBW,YAAY;;SAsBpB,cAAC,KAAK,EAAE;AACX,SAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;GACzE;;;QAxBW,YAAY","file":"baseOperator.js","sourcesContent":["'use strict';\n\n/**\n * @abstract\n */\nexport class BaseOperator {\n\n\tstatic _checkForNumber(value, valueOwner) {\n\t\tif(typeof value !== 'number') {\n\t\t\tthrow new Error(`${valueOwner} argument should be a number. ${typeof value} is taken`);\n\t\t}\n\t}\n\n\tstatic _checkForNaN(value, valueOwner) {\n\t\tif(isNaN(value)) {\n\t\t\tthrow new Error(`${valueOwner} argument should be a number. NaN is taken`);\n\t\t}\n\t}\n\n\tconstructor(value) {\n\t\tthis._value = value;\n\t}\n\n\t/**\n\t * @abstract\n\t * @param {*} value\n\t */\n\ttest(value) {\n\t\tthrow new Error(\"BaseOperator#test: abstract method is not implemented\");\n\t}\n\n}\n"]}